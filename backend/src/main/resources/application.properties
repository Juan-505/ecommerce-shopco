spring.application.name=backend
# =================================================================
# 1. DATABASE CONFIGURATION (PostgreSQL - Neon)
# =================================================================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# =================================================================
# 2. JPA/HIBERNATE CONFIGURATION
# =================================================================
# Dialect type suitable for PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Option: Hibernate will automatically create/update DB schema
# Safest value for development environment is update
# - none: Do nothing
# - create-only: Only create schema on first run
# - update: Update schema (add columns, change data types)
# - create: Drop and recreate schema (DANGEROUS - WILL LOSE DATA)
spring.jpa.hibernate.ddl-auto=update
# Option: Show SQL statements in console for debugging
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# =================================================================
# 3. SERVER CONFIGURATION
# =================================================================
server.port=8080
server.servlet.context-path=/api

# =================================================================
# 4. CORS CONFIGURATION
# =================================================================
# Allow CORS for frontend development
spring.web.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# =================================================================
# 5. LOGGING CONFIGURATION
# =================================================================
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.shopco.backend=DEBUG